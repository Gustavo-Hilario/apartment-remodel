# ===========================================
# ENVIRONMENT CONFIGURATION
# ===========================================
# This project supports dual database setup:
# - .env.local (gitignored) - for local development
# - .env (tracked in git) - for production/cloud
#
# Priority: .env.local takes precedence over .env
# ===========================================

# Server Configuration
PORT=8000
NODE_ENV=production

# ===========================================
# MongoDB Configuration
# ===========================================
# PRODUCTION (.env file):
# Use MongoDB Atlas connection string
# Format: mongodb+srv://<username>:<password>@<cluster>.mongodb.net/<database>?retryWrites=true&w=majority
MONGO_URL=mongodb+srv://<username>:<password>@<cluster>.mongodb.net/apartment_remodel?retryWrites=true&w=majority

# DEVELOPMENT (.env.local file):
# Create a .env.local file with local MongoDB:
# MONGO_URL=mongodb://localhost:27017/apartment_remodel_dev
# NODE_ENV=development
#
# To start local MongoDB:
# macOS: brew services start mongodb-community
# Or: mongod
# ===========================================

# CORS Configuration
# Development: http://localhost:3000
# Production: Your Vercel frontend URL (e.g., https://your-app.vercel.app)
CLIENT_URL=http://localhost:3000

# Authentication Configuration
# JWT secret for token signing
# Generate with: openssl rand -base64 32
# IMPORTANT: Use a strong, unique secret in production
JWT_SECRET=your-secret-key-here-change-in-production

# ===========================================
# DATABASE BACKUP
# ===========================================
# The project includes database-to-database backup scripts:
#
# Create/Update Backup:
#   npm run backup
#   - Copies all data to apartment_remodel_backup
#   - Or apartment_remodel_dev_backup for local dev
#
# Restore from Backup:
#   npm run restore
#   - Restores data from backup database
#   - Requires confirmation (type "RESTORE")
#
# Backup databases are created automatically in the same
# MongoDB instance (local or cloud) as your main database.
# ===========================================

# ===========================================
# SETUP INSTRUCTIONS
# ===========================================
# 1. Copy this file to .env for production settings
# 2. Create .env.local for local development:
#    - Set MONGO_URL to local MongoDB
#    - Set NODE_ENV to development
# 3. The app will automatically use .env.local when present
# 4. .env.local is gitignored and won't be committed
# 5. Use npm run backup regularly to backup your data
# ===========================================
